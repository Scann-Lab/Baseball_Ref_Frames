unthreshed_data_for_R <- read.csv("~/GitHub/Ultimate/unthreshed_data_for_R.csv")
View(unthreshed_data_for_R)
ezANOVA(data = myData, dv=Trials_responsert, wid = participant, within=c(prompt1,stim1,condition))
library(ez)
ezANOVA(data = myData, dv=Trials_responsert, wid = participant, within=c(prompt1,stim1,condition))
ezANOVA(data = unthreshed_data_for_R, dv=Trials_responsert, wid = participant, within=c(prompt1,stim1,condition))
ezANOVA(data = unthreshed_data_for_R, dv=Trials_responsert, wid = participant, within=c(stim1,condition))
unthreshed_data_for_R <- read.csv("~/GitHub/Ultimate/unthreshed_data_for_R.csv")
View(unthreshed_data_for_R)
ezANOVA(data = unthreshed_data_for_R, dv=Trials_responsert, wid = participant, within=c(stimLoc,promptType,condition))
data_for_R <- read.csv("~/GitHub/Ultimate/data_for_R.csv")
View(data_for_R)
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(stimLoc,promptType,condition))
library(ez)
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(stimLoc,promptType,condition))
ezDesign(data_for_R,x=Trials_responsert,y=participant)
ezDesign(data_for_R)
ezDesign(data_for_R,Trials_responsert,participant)
library("digest", lib.loc="~/R/win-library/3.1")
ezDesign(data_for_R,Trials_responsert,participant)
ezPrecis(data_for_R)
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(stimLoc,promptType,condition))
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(stim1,condition))
source('~/GitHub/Ultimate/RM_Anova.R', echo=TRUE)
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(prompt1,stim1,condition))
ezANOVA(data = data_for_R, dv=Trials_responsert, wid = participant, within=c(prompt1,stimLoc,condition))
myData <- data_for_R
myData.mean <- aggregate(myData$Trials_responsert,
by = list(myData$participant, myData$stim1,
myData$prompt1),
FUN = 'mean')
colnames(myData.mean) <- c("participant","stim1","prompt1","Trials_responsert")
myData.mean <- myData.mean[order(myData.mean$participant), ]
head(myData.mean)
rt.aov <- with(myData.mean,
aov(Trials_responsert ~ stim1 * prompt1 +
Error(participant / (stim1 * prompt1)))
)
rt.aov <- with(myData.mean,
aov(Trials_responsert ~ stimLoc * promptType +
Error(participant / (stimLoc)))
)
myData <- data_for_R
myData.mean <- aggregate(myData$Trials_responsert,
by = list(myData$participant, myData$stimLoc,
myData$promptType),
FUN = 'mean')
colnames(myData.mean) <- c("participant","stimLoc","promptType","Trials_responsert")
myData.mean <- myData.mean[order(myData.mean$participant), ]
head(myData.mean)
rt.aov <- with(myData.mean,
aov(Trials_responsert ~ stimLoc * promptType +
Error(participant / (stimLoc)))
)
rt.summary()
summary(rt)
summary(rt.avo)
summary(rt.aov)
rt.aov <- with(myData.mean,
aov(Trials_responsert ~ stimLoc * promptType * condition +
Error(participant / (stimLoc*promptType*condition)))
)
myData <- data_for_R
myData.mean <- aggregate(myData$Trials_responsert,
by = list(myData$participant, myData$stimLoc,
myData$promptType, myData$condition),
FUN = 'mean')
colnames(myData.mean) <- c("participant","stimLoc","promptType","condition","Trials_responsert")
myData.mean <- myData.mean[order(myData.mean$participant), ]
head(myData.mean)
rt.aov <- with(myData.mean,
aov(Trials_responsert ~ stimLoc * promptType * condition +
Error(participant / (stimLoc*promptType*condition)))
)
summary(rt.aov)
install.packages(c("apcluster", "corrplot", "DEoptimR", "DiagrammeR", "diptest", "eRm", "evaluate", "expm", "formatR", "fpc", "glmnet", "gridExtra", "gtrendsR", "Hmisc", "htmltools", "htmlwidgets", "jsonlite", "kernlab", "knitr", "latticeExtra", "manipulate", "mclust", "mnormt", "msm", "mvtnorm", "pbkrtest", "permute", "plotrix", "ppcor", "pvclust", "quantreg", "RcppEigen", "RCurl", "robustbase", "rstudioapi", "sem", "sfsmisc", "vegan", "visNetwork", "zoo"))
install.packages("knitr")
update.packages("knitr")
remove.packages("knitr", lib="~/R/win-library/3.1")
install.packages("knitr")
install.packages("rmarkdown")
getOption(repos)
getOption("repos")
install.packages("rmarkdown", repos = "https://cran.revolutionanalytics.com")
install_version("knitr", version = "1.20")
require(devtools)
install_version("knitr", version = "1.20")
R.Version()
install.packages("install")
install.packages("installr")
updateR()
library("installr", lib.loc="~/R/win-library/3.1")
updateR()
R.version
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.4")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.4")
install.packages("reticulate")
library("reticulate", lib.loc="~/R/win-library/3.4")
write.csv(USArrests, "USArrests.csv")
write.csv(USArrests, "USArrests.csv")
